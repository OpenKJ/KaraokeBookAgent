name: MacOS Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get version
      run: |
        SAVER=`grep VERSION_STRING version.h | cut -d'"' -f2`
        echo "Version: $SAVER"

    - name: Installing gcloud console tools
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
      #  project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCLOUD_KEY }}
        export_default_credentials: true

    - name: Decode app signing cert
      id: write_file_appcert
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: 'app.p12'
        encodedString: ${{ secrets.MAC_DEVID_APP_CERT_BASE64 }}

    - name: Decode installer signing cert
      id: write_file_installercert
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: 'installer.p12'
        encodedString: ${{ secrets.MAC_INSTALLER_CERT_BASE64 }}

    - name: Setting up signing environment
      run: |
        security create-keychain -p '${{ secrets.MAC_P12_PASS }}' build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p '${{ secrets.MAC_P12_PASS }}' build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        security import ${{ steps.write_file_appcert.outputs.filePath }} -k build.keychain -P '${{ secrets.MAC_P12_PASS }}' -A
        security import ${{ steps.write_file_installercert.outputs.filePath }} -k build.keychain -P '${{ secrets.MAC_P12_PASS }}' -A
        security set-key-partition-list -S apple-tool:,apple: -s -k '${{ secrets.MAC_P12_PASS }}' build.keychain

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
       path: ../Qt
       key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
       cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Run qmake
      run: qmake

    - name: Run make
      run: make
    
    - name: Rename app
      run: mv SongbookAgent.app "Songbook Agent.app"
    
    - name: Run macdeployqt
      run: macdeployqt "Songbook Agent.app" -appstore-compliant

    - name: Sign app bundle
      run: |
        codesign -s "Developer ID Application: Isaac Lightburn (47W8CPBS5A)" -vvvv --deep "Songbook Agent.app"

    - name: Create installer
      run: |
        mkdir fakeroot
        mkdir fakeroot/Applications
        mv "Songbook Agent.app" fakeroot/Applications
        #find "./Songbook Agent.app"
        #mv "Songbook Agent.app" "/Applications/Songbook Agent.app"
        #find "/Applications/Songbook Agent.app"
        pkgbuild --root "fakeroot" --component-plist components.plist --identifier "com.okjsongbook.agent" --sign "Developer ID Installer: Isaac Lightburn (47W8CPBS5A)" OpenKJ-Songbook-Agent-`grep VERSION_STRING version.h | cut -d'"' -f2`-unstable-osx-installer.pkg
        #productbuild --identifier com.okjsongbook.agent --version `grep VERSION_STRING version.h | cut -d'"' -f2` --component "/Applications/Songbook Agent.app" SongbookAgent.pkg
        #productsign --sign "Developer ID Installer: Isaac Lightburn (47W8CPBS5A)" SongbookAgent.pkg OpenKJ-Songbook-Agent-`grep VERSION_STRING version.h | cut -d'"' -f2`-unstable-osx-installer.pkg

    - name: Upload installer to Google Cloud Storage
      run: |
        gsutil cp OpenKJ-Songbook-Agent-`grep VERSION_STRING version.h | cut -d'"' -f2`-unstable-osx-installer.pkg  gs://openkj-songbook-agent/macos/unstable/


